@using Microsoft.AspNetCore.Components.Web
@namespace NewAttendanceProject.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="NewAttendanceProject.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        window.printElement = function (elementId) {
            var printContents = document.getElementById(elementId).innerHTML;
            var originalContents = document.body.innerHTML;

            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;
            
            // Return focus to the app after printing
            window.location.reload();
        }
    </script>
    
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let attendanceChart = null;
        let issuesChart = null;
        
        window.renderCharts = (attendanceData, issuesData) => {
            // Destroy existing charts if they exist
            if (attendanceChart) {
                attendanceChart.destroy();
            }
            
            if (issuesChart) {
                issuesChart.destroy();
            }
            
            // Render attendance overview chart
            const attendanceCtx = document.getElementById('attendanceChart');
            if (attendanceCtx) {
                attendanceChart = new Chart(attendanceCtx.getContext('2d'), {
                    type: 'pie',
                    data: attendanceData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });
            }
            
            // Render attendance issues chart
            const issuesCtx = document.getElementById('issuesChart');
            if (issuesCtx) {
                issuesChart = new Chart(issuesCtx.getContext('2d'), {
                    type: 'bar',
                    data: issuesData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    precision: 0
                                }
                            }
                        }
                    }
                });
            }
        };
    </script>
</body>
</html>
